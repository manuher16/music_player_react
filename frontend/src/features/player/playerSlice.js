import { createSlice } from '@reduxjs/toolkit';


const initialState = {
    playing: {
        name: 'Reminber',
        artist: 'The Weekend',
        album: 'Starboy',
        image: '/assets/cover.jpg',
        file: "/assets/media/audio.mp3",
    },
    autoPlay: false,
};

// The function below is called a thunk and allows us to perform async logic. It
// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This
// will call the thunk with the `dispatch` function as the first argument. Async
// code can then be executed and other actions can be dispatched. Thunks are
// typically used to make async requests.


export const playerSlice = createSlice({
    name: 'player',
    initialState,
    // The `reducers` field lets us define reducers and generate associated actions
    reducers: {
        setSongPlaying: (state, action) => {
            state.playing = action.payload;
        },
        setAutoPlay: (state, action) => {
            state.autoPlay = action.payload;
        }
    },
    // The `extraReducers` field lets the slice handle actions defined elsewhere,
    // including actions generated by createAsyncThunk or in other slices.

});

export const { setSongPlaying, setAutoPlay } = playerSlice.actions;

// The function below is called a selector and allows us to select a value from
// the state. Selectors can also be defined inline where they're used instead of
// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`


export default playerSlice.reducer;
